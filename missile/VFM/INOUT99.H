#ifndef ASD
#define ASD 1
double chislo(char *fname,int i,int k)
//Эта функция требует наличия двух заголовочных файлов:
//#include <stdio.h>
//#include <stdlib.h>
//fname - путь и имя к файлу из которого производится чтение(12 символов)
//i - номер строки файла
//k - номер позиции с которой производится чтение
//действие функции - начиная с позиции i, k производится чтение из файла
//начальные пробелы откидываютя, считываются цифры, '.', '+', '-' до пер-
//вого пpобельного символа, после чего преобразубтся в числовое значение

/*************************************************
Порядок нумерации
	  #1
457897	  #2
	  #3
###########
0123456789
то есть выполнение функции вида приведёт к следующему результату
chislo("name.ext",2,2)=7897.0
**************************************************/
{
//*fd1-указатель на файл данных
FILE *fd1;
char chislo_s[50],line[256];
int nline=0,j;
char *ch;
double chislo_d;
//Открытие файла данных или выход из программы при отсутствии этого файла
//(открытие файла только для чтения)
if ((fd1=fopen(fname,"r"))==NULL)
		{
		perror(fname);
		return 0.00005;
		}
//Нахождение строки с нужным номером i
while (fgets(line,256,fd1)!=NULL)
		//счётчик строк nline
		{
		nline++;
		//printf("nl=%d\n",nline);
		//getch();
		if (nline==i) break;
		}

//Проверка на несоответстие первого символа пробелу
			if (line[k-1]==' ' || line[k-1]=='*' || line[k-1]=='=')
			for (;line[k]==' ' || line[k]=='*'   || line[k]=='=';k++);

			//printf("\nkkk%d",k);
//Считывание числа в символьном виде с указанной позиции до пробела
//1-ый этап - подсчёт количества символов в символьном представлении
//числа
			for (j=0;line[k]!=' ';k++)
			{
			if(line[k]=='*')break;
			j++;
			}
			//printf("\nssss%s",line);

//2-ой этап - выделение динамической памяти для массива с символами,
//представляющими число
				ch=(char*)malloc(j*sizeof(char));
//повторное использование nline, но в другом контексте
				for (nline=0,k=k-j;nline<j;nline++)
				{
//запись символов в массив
				ch[nline]=line[k];
				k++;
				}
fclose(fd1);
// преобразование числа из символьного представления в вещественное
chislo_d=atof(ch);
free(ch);
return chislo_d;
}
#endif
